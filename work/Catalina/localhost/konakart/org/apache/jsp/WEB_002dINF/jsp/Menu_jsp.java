/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2022-02-26 01:50:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/KonaKart/webapps/konakart/WEB-INF/lib/struts2-core-kk-2.3.8.jar!/META-INF/struts-tags.tld", Long.valueOf(1355748546000L));
    _jspx_dependants.put("/WEB-INF/kk.tld", Long.valueOf(1640259136000L));
    _jspx_dependants.put("/WEB-INF/jsp/Taglibs.jsp", Long.valueOf(1640259136000L));
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-kk-2.3.8.jar", Long.valueOf(1640253186000L));
    _jspx_dependants.put("/WEB-INF/tiles-jsp.tld", Long.valueOf(1640259136000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
 com.konakart.al.KKAppEng kkEng = (com.konakart.al.KKAppEng) session.getAttribute("konakartKey");
      out.write('\r');
      out.write('\n');
 com.konakart.al.CategoryMgr catMgr = kkEng.getCategoryMgr();
      out.write('\r');
      out.write('\n');
 com.konakart.appif.CategoryIf[] cats  = catMgr.getCats();
      out.write('\r');
      out.write('\n');
 com.konakart.al.ProductMgr prodMgr = kkEng.getProductMgr();
      out.write('\r');
      out.write('\n');
 int menuType =  kkEng.getPropertyAsInt("menu.type", 1);
      out.write("\r\n");
      out.write("\r\n");
if (menuType == 2){ 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\tif ($('#side-menu').length && $('#side-menu-mobile').is(\":visible\")){\r\n");
      out.write("\t\t\t\t$('#smart-menus').hide();\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\t$('#smart-menus').smartmenus();\r\n");
      out.write("\t\t\t}  \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(window).resize(function() {\r\n");
      out.write("\t\t\tif ($('#side-menu').length && $('#side-menu-mobile').is(\":visible\")){\r\n");
      out.write("\t\t\t\t$('#smart-menus').hide();\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\t$('#smart-menus').show();\r\n");
      out.write("\t\t\t}  \r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<ul id=\"smart-menus\" class=\"sm sm-clean\">\r\n");
      out.write("\t  <li><a href=\"#\">");
      out.print(kkEng.getMsg("menu.body.products"));
      out.write("</a>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t");
for (int i = 0; i < cats.length; i++) {
      out.write("\r\n");
      out.write("\t\t\t");
com.konakart.appif.CategoryIf cat = cats[i]; 
      out.write("\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<a href='");
      out.print("SelectCat.action?catId="+cat.getId());
      out.write('\'');
      out.write('>');
      out.print(cat.getName());
      out.write("</a>\r\n");
      out.write("\t\t\t\t");
if (cat.getChildren() != null && cat.getChildren().length > 0){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t");
for (int j = 0; j < cat.getChildren().length; j++) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
com.konakart.appif.CategoryIf child = cat.getChildren()[j]; 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<li><a href='");
      out.print("SelectCat.action?catId="+child.getId());
      out.write('\'');
      out.write('>');
      out.print(child.getName());
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t");
 } 
      out.write("\t\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t  </li>\r\n");
      out.write("\t   <li class=\"has-mega-menu\"><a href=\"#\">");
      out.print(kkEng.getMsg("menu.body.brands"));
      out.write("</a>\r\n");
      out.write("\t  \t<ul class=\"mega-menu\">\r\n");
      out.write("\t  \t\t<li>\r\n");
      out.write("\t\t   \t\t");
 int colCount =  (prodMgr.getAllManuDropList().length / 3);
      out.write("\r\n");
      out.write("\t\t   \t\t");
if (prodMgr.getAllManuDropList().length % 3 != 0) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
colCount += 1; 
      out.write("\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t");
 int breakCount = colCount; 
      out.write("    \t\t\r\n");
      out.write("\t\t\t\t");
 for (int i = 0; i < prodMgr.getAllManuDropList().length; i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
if (i==0) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"column-1-3\"><ul>\r\n");
      out.write("\t\t\t\t\t");
 } else if (i==breakCount){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul></div><div class=\"column-1-3\"><ul>\r\n");
      out.write("\t\t\t\t\t\t");
 breakCount += colCount;
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 com.konakart.al.DropListElement dre = prodMgr.getAllManuDropList()[i];
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href='");
      out.print("ShowSearchByManufacturerResultsByLink.action?manuId="+dre.getId());
      out.write('\'');
      out.write('>');
      out.print(dre.getDesc());
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</ul></div>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t  </li>  \r\n");
      out.write("\t</ul>\r\n");
      out.write("\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\tif ($('#side-menu').length && $('#side-menu-mobile').is(\":visible\")){\r\n");
      out.write("\t\t\t\t$('#main-menu').hide();\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\t$('#main-menu').smartmenus();\r\n");
      out.write("\t\t\t}  \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(window).resize(function() {\r\n");
      out.write("\t\t\tif ($('#side-menu').length && $('#side-menu-mobile').is(\":visible\")){\r\n");
      out.write("\t\t\t\t$('#main-menu').hide();\r\n");
      out.write("\t\t\t}else {\r\n");
      out.write("\t\t\t\t$('#main-menu').show();\r\n");
      out.write("\t\t\t}  \r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div id=\"main-menu\">\r\n");
      out.write("\t\t");
for (int i = 0; i < cats.length; i++) {
      out.write("\r\n");
      out.write("\t\t\t");
com.konakart.appif.CategoryIf cat = cats[i]; 
      out.write("\r\n");
      out.write("\t\t\t");
String menuClass; 
      out.write("\r\n");
      out.write("\t\t\t");
if (i == cats.length-1){ 
      out.write("\r\n");
      out.write("\t\t\t\t");
 menuClass = "menu-item rounded-corners last-child"; 
      out.write("\r\n");
      out.write("\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t");
 menuClass = "menu-item rounded-corners"; 
      out.write("\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t<a href='");
      out.print("SelectCat.action?catId="+cat.getId());
      out.write("' class=\"");
      out.print(menuClass);
      out.write("\" style=\"width: auto;\">");
      out.print(cat.getName());
      out.write("</a>\r\n");
      out.write("\t\t");
 } 
      out.write("\t\t\t\t\t\r\n");
      out.write("\t</div>\r\n");
 } 
      out.write('	');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
