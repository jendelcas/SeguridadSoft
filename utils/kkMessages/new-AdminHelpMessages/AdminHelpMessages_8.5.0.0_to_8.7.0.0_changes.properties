# Messages changed between 8.5.0.0 to 8.7.0.0
#-------------------------------------------------------------

help.orders = This panel can be configured to display the Order Id or the Order Number in the left most column. The Order Id is generated by KonaKart automatically and is a unique ascending integer. The Order Number may be generated by custom business logic just before an order is saved and so may adhere to company standards etc. The Order Number may contain both letters and numbers. The panel can be configured in the <b>Configuration >> Admin App Configuration</b> section of the Admin App.<br /><br />You may search for orders using a combination of various filters:<br /><ul><li>Orders from a customer using the customer's id</li><li>Orders based on their Order Id or Order Number</li><li>Orders in a certain state</li><li>Orders from a customer using the customer's name</li><li>Orders from a customer using the customer's email address</li><li>Orders from a customer using the customer's postcode</li></ul>Once the search criteria have been set, you must click the search button.<br /><br />Any displayed orders may be edited or deleted by clicking the respective buttons at the bottom of the list.<br /><br />Click the <b>Invoice</b> button to view, print and send the invoice. The template used for the displayed (and PDF) invoice is called OrderInvoice. The template used for the email that sends the invoice is OrderInvoiceAttachment. In konakartadmin_gwt.properties you can set fbc.kk_display_panel.invoice.send_attachment to false so that the invoice is not sent as a PDF attachment. Default behaviour is to send it as an attachment of the email.<br /><br />Click the <b>Packing Slip</b> button to view and print the packing slip.<br /><br />Click the <b>Payment Info</b> button to view any payment gateway information that may be associated with the order.<br /><br />Click the <b>Returns</b> button to view / edit / insert any information regarding products that have been returned.<br /><br />Click the <b>Refunds</b> button to view / edit / insert any information regarding refunds and to perform real time refunds through the payment gateway. This button may be hidden by setting the fbc.kk_panel_orders.hide_refunds parameter in konakartadmin_gwt.properties.<br /><br />Click the <b>Export Order</b> button to export the order as an XML file (Enterprise Extensions Only). The root directory for file creation is set by the configuration variable in the <b>Configuration >> Shipping / Packing</b> section of the Admin App.<br /><br />Click the <b>Export Order For Shipping</b> button to export the order for shipping. This option uses code in the Shipping Modules to export the order in a format appropriate for a 3rd Party Shipping Application - such as for UPS WorldShip. The root directory for file creation is set by the configuration variable in the <b>Configuration >> Shipping / Packing</b> section of the Admin App.<br /><br />Click the <b>Customer</b> button to go to a panel showing information about the customer that submitted the order. From this panel you can send an eMail to the customer, log in to the application as the customer etc.<br /><br />Click the <b>Subscriptions</b> button to go to a panel showing any recurring billing subscriptions that may be associated with the selected order. If your store doesn't support recurring billing, then this button may be removed in the <b>Configuration >> Admin App Configuration</b> section of the Admin App.<br /><br /><b>File based configuration</b> can be used to define the number of orders shown in each group returned from the database.<br /><br />Click the <b>Settings</b> icon to set the following:<br /><ul><li>Orders per page</li></ul>
help.promotions = A promotion is an offer that a merchant may apply to any number of his products. Promotions may be searched for, created, edited and deleted. To search for a promotion, either enter the id or the name and click the <b>Search</b> button. The id of any promotion may be viewed as floatover text by placing your mouse over the name of the promotion in the table of results. Once a promotion has been created, clicking the <b>Rules</b> button allows you to refine it by adding rules for Manufacturers, Categories, Products, Customers, Customer Groups and Customers defined by Expressions. If the functionality of an attribute isn't clear, explanatory floatover text appears when you move your mouse over the attribute label.<br /><br />If your store is in a different time zone compared to your server, or you are running in multi-store mode where the stores are in different time zones, then you may set the time zone of your store in the <b>TZ DB Time Zone</b> configuration variable under <b>Configuration >> Store Configuration</b>. The time zone must be set as a tz database time zone such as US/Pacific, Australia/Perth or Europe/London. A list of valid zones may be found on Wikipedia [https://en.wikipedia.org/wiki/List_of_tz_database_time_zones] . The time zone calculation using the tz database time zones will automatically compensate for daylight savings time if the time zone supports it. Once the time zone has been configured, you may set the promotion start and end dates in your local time and the KonaKart server will compensate for any time difference between your store time zone and the time zone where your KonaKart server is running.<br /><br /><b>State</b><br />The promotion may be enabled (green dot), disabled (red dot) or in test mode (amber dot). Test mode (Enterprise Only) is a mode where the promotion is associated with an expression that defines which test users are activated for the promotion. The promotion will only be active for the set of test users defined by the expression, to allow these users to verify that the promotion functions correctly within a production environment. The name of the expression may be defined by a configuration variable under <b>Configuration >> Customer Details</b> and after a default installation is called <b>PromotionTester</b>. In order to add a customer to the test group, you must set the value of the <b>PROMOTION_TESTER</b> tag for that customer to <b>true</b>. Note that promotions in test mode are active, so when you sort the promotions by state, by clicking on the column header, the sort only distinguishes between active and non active promotions.<br /><br /><b>New</b><br />When the new button is clicked, some edit fields become visible. These edit fields apply to all promotions. The ones outlined in red are mandatory and must be set with valid data. The promotion must be given a name and the type of promotion must be selected from the drop list. Once a type has been selected, more edit fields appear which are specific to the selected promotion. They must all be set and then the promotion can be saved.<br /><br />The promotion types available in the drop list are defined in the <b>Modules >> Order Total</b> section of the Admin App. New types may be added by adding new modules to KonaKart. Note that the promotion will not become active until the relevent OrderTotal module has been installed.<br /><br /><b>Coupons</b><br />A promotion may be associated with one or more coupons. This means that during the checkout process, the customer must enter a valid coupon code in order to activate the promotion. The window that opens by clicking this button, allows you to manage <b>only</b> the coupons associated with this promotion.<br /><br /><b>Gift Certificates</b><br />This button opens a window that allows you to associate Gift Certificate products to the promotion.
help.editCustomerPersonalInsert = Enter the personal details for the Customer.<br /><br />The password field will display dots instead of the characters that you type.<br /><br />The <b>Customer Type</b> may take one of three values:<ol><li>An Administrator User</li><li>A Standard Application Customer</li><li>A Default Customer. There should only be one of these. It is a fictitious customer used to create a temporary order for displaying order totals before the checkout process. i.e. In the edit cart screen a customer can see estimated shipping costs and promotional discounts without having to log in or register. The address of the default customer should be an address that will generate average shipping costs. i.e. If the majority of your business is national then it shouldn't be an international address.</li></ol>The <b>External Reference</b> attributes are placeholders for identifiers that identify the customer in external systems such as a payment gateway that stores credit card details or a national identification number.<br /><br />When editing or inserting a customer a check is always made to ensure that the eMail address is unique. In konakartadmin_gwt.properties you can set the following file based configuration variables: <ul><li>fbc.kk_panel_insertCustomer.username_unique = true</li><li>fbc.kk_panel_insertCustomer.telephone_unique = true</li><li>fbc.kk_panel_insertCustomer.telephone_1_unique  = true</li></ul>to enforce uniqueness checking on the customer's username and the telephone numbers.  
help.editProductsQuantities = This screen is used to manage the stock information of a product. The information presented on the panel is different depending on whether the product has been assigned attributes. For example if you have a shirt that comes in various colors and sizes, you will probably want to know how many you have in stock for the various color / size combinations. If the product has no attributes, then the only fields visible are the ones that allow you to input stock data for a single SKU. Otherwise you are presented with an array that allows you to enter stock data for multiple SKUs.<br /><br />When inserting a product the multiple SKU array will never be present until the product has been saved since it can only display data based on product attributes that already exist. You must save the product, click the <b>Back</b> button and then edit the product in order to insert SKU / quantity / date available data.<br /><br />If the Warn of Duplicate SKUs configuration variable is set to true in the <b>Configuration >> Admin App Configuration</b> section of the Admin App, then a warning appears when the system detects that the SKU entered already exists.<br /><br />The <b>Quantity</b> field for a bundle product is read-only. It is calculated by considering the quantities of all components of the bundle and the lowest quantity is returned. If the quantity of a product within the bundle is greater than 1 then this information is also used within the formula.<br /><br />The <b>Stock Reorder Level</b> defaults to -1 which means that the global value defined by the STOCK_REORDER_LEVEL configuration variable is used. If set to a positive number, then this value will override the global value.<br /><br /><b>Can order when not in stock</b> defaults to the global value defined by the STOCK_ALLOW_CHECKOUT configuration variable. The default value can be overridden on a product by product basis, by setting it to yes or no.<br /><br /><b>Ignore Qty for Variations</b> is used by KonaKart when the product has been assigned attributes and you may assign an SKU and quantity for each variation (e.g. small, medium, large). When checked, the individual quantities are not used and the stock level is taken from the single quantity attribute assigned to the product.<br /><br /><b>Ignore Qty when Editing</b> when set, instructs KonaKart to not change the quantity of the product or its variants when the save button is clicked. This is useful for cases when the quantity of a product may be changing (as customers buy it) while the product is being edited and you do not want the quantity to be updated when the edit is saved because this would set the quantity to the original value that was read when the product was fetched from the DB. The default value may be controlled from konakartadmin_gwt.properties by the value of fbc.kk_panel_editProduct.qty.ignore.qty.default.<br /><br/><b>Products Ordered</b> keeps track of the number of times a product has been ordered. It is updated automatically by the KonaKart engine although here the value can be set manually.<br /><br /><b>Ignore Ordered when Editing</b> when set, instructs KonaKart to not change the number of times a product has been ordered when the save button is clicked. The default value may be controlled from konakartadmin_gwt.properties by the value of fbc.kk_panel_editProduct.ordered.ignore.ordered.default.<br /><br />Using file based configuration (Enterprise Only) you can enable one or two custom fields for each line of the multiple SKU array.
help.editCustomerPersonalEdit = Enter the personal details for the Customer.<br /><br />You cannot change the password here. Instead use the "Reset Password" on the Customers panel.<br /><br />The <b>Customer Type</b> may take one of three values:<ol><li>An Administrator User</li><li>A Standard Application Customer</li><li>A Default Customer. There should only be one of these. It is a fictitious customer used to create a temporary order for displaying order totals before the checkout process. i.e. In the edit cart screen a customer can see estimated shipping costs and promotional discounts without having to log in or register. The address of the default customer should be an address that will generate average shipping costs. i.e. If the majority of your business is national then it shouldn't be an international address.</li></ol><br/>If the <b>Customer Group</b> is changed to a valid new group, you will be prompted to send a template based eMail to the customer. This is a useful feature for when the customer is going through an approval process. For example, a customer may have registered through the application as a wholesale customer. During registration he was placed in a "Waiting for Approval" customer group and now the administrator may approve or decline the request. As a result of the approval, the customer may receive an eMail informing him of the decision. The template used is in the form <b>CustGroupChange_groupId_lang.vm</b> e.g. CustGroupChange_2_en.vm, if the customer has been moved to the group with id equals 2 in a system where the lang is "en".<br /><br />The <b>External Reference</b> attributes are placeholders for identifiers that identify the customer in external systems such as a payment gateway that stores credit card details or a national identification number.<br /><br />When editing or inserting a customer a check is always made to ensure that the eMail address is unique. In konakartadmin_gwt.properties you can set the following file based configuration variables: <ul><li>fbc.kk_panel_insertCustomer.username_unique = true</li><li>fbc.kk_panel_insertCustomer.telephone_unique = true</li><li>fbc.kk_panel_insertCustomer.telephone_1_unique  = true</li></ul>to enforce uniqueness checking on the customer's username and the telephone numbers.
help.editProductsDescription = A product name and description must be entered for each language. The product URL, the Product Comparison Data and various Custom Fields (if displayed) are not compulsory.<br /><br />The <b>Product Comparison Data</b> is structured data that can be used on the UI to compare this product with a similar product. For example, it could be XML where each tag represents a feature of the product. <br /><br />The <b>Custom Fields</b> can be used for any purpose and the labels can be changed to reflect what the fields should contain.  The custom field lengths can be modified in the database if required (by default they are set to be very short fields to optimise performance when these are not required).  Their display on this panel can be enabled using File-Based Configuration (fbc.kk_panel_editProduct.desc.show_custom* in konakartadmin_gwt.properties) and their validation defined using Custom Validation.<br /><br />The <b>Viewed Count</b> shows how many times a product has been viewed in a particular language. In the standard KonaKart storefront application, the default order by when viewing products is by Most Viewed. An administrator may set the Viewed Count in order to promote a product so that it is displayed before the others. Note that after a default installation, the storefront application is configured to not update the product viewed count every time a product is viewed, for performance considerations.<br /><br />In order for the view count to be updated, you must uncheck the check box alongside it. Typically, you may not want the viewed count to be updated to the last value that was read from the database, because while editing, it may have been incremented by the storefront application. The configuration variable fbc.kk_panel_editProduct.desc.ignore.view.count.default in konakartadmin_gwt.properties allows you to set the default value of the check box.<br /><br /><b>Note:</b> The Insert or Save button will not be enabled until valid data has been entered in all compulsory fields (outlined in red) in <b>all tabs</b>. If you are wondering why the Insert or Save button isn't enabled, you should cycle through all of the tabs outlined in red and look for entry fields outlined in red.
help.returns = An order may have multiple returns (i.e. The products within the order may be returned at different times). The return must contain a Return Merchandise Authorization code (RMA) and may contain text explaining the reason for the return. Each return contains a number of returned products whose quantity cannot exceed the total number of products within the order.<br /><br /><b>Searching and Editing</b><br />Returns may be searched for by the id of the order, the Order Number or by the RMA. You must enter the search constraints and then click the <b>Search</b> button. This will retrieve all return objects matching the search criteria. In most cases there will only be one return per order. When you click on a row containing a return, the details of the return will be displayed. The details include the Order Id, Order Number, the RMA Code and the Return Reason. Below these details, you will see a list of products that the order contained. Each product can be identified by its product Id and / or its SKU. You may modify the number of products returned by entering a number that cannot be greater than the quantity within the original order. Clicking the <b>Save</b> button will save the modification.<br /><br /><b>Inserting</b><br />To insert a new return, you must click the <b>New</b> button and enter an Order Id and an RMA Code. The Order Number is optional. When you tab out of the Order Id field after having entered the id of an existing order, a list of products will appear, all with return quantity set to 0. You may change these quantity fields to match the actual products that have been returned and then click the <b>Save</b> button to save the return. If your orders have an Order Number, you may enter that instead of the Order Id, and when tabbing out of the Order Number field the product list appears in the same way as just described. When this window is opened from the Orders window after having selected an order, the Order Id and Order Number fields are automatically populated with data from the selected order.<br /><br />In the Enterprise version of KonaKart you will notice that each product line in the list of products contains a Unit Price and a Points text box where you may enter the number of points and the amount that needs to be refunded when a single product is returned. The Unit Price default value is set when the order is created by the manageReturnValues(OrderIf order) method in the OrderIntegrationMgr. The logic for setting the Unit Price may be modified by editing this method. The default value for the points is set by the points promotion module when the points are allocated. Note that the initial Unit Price for refunds (set when the order is created) needs to be modified by any promotion module that applies a discount so that the correct value is saved in the database. <br /><br />Konakartadmin_gwt.properties contains a couple of configuration variables that may be used to modify what is displayed in the array by hiding the point and / or model columns.<ul><li>#fbc.kk_panel_returns.hide_points                           = true</li><li>#fbc.kk_panel_returns.hide_model                            = true</li></ul> <br /><br />The <b>AdminOrderIntegrationMgr</b> contains a <b>getRMACode()</b> method which automatically generates an RMA code based on the order id that is used to populate the entry field. This method may be modified to add your own custom algorithm. In order to force manual entry of the RMA Code, the method must return null.<br /><br />A custom button with a label such as <b>Credit</b> may appear if it has been defined by the administrator and you are authorized to use it.   This button will have functionality specific to your particular store (please ask your KonaKart administrator for details).<br /><br />Click the <b>Settings</b> icon to set the following:<br /><ul><li>Returned Products per page</li></ul>
